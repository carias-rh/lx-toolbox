#!/usr/local/bin/python3
### Maintained by carias@redhat.com

import time, os.path
from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
import logging

# Chromedriver options
#options = webdriver.ChromeOptions()
#options.add_argument('--ignore-certificate-errors')
#options.add_argument('headless')
#options.add_argument('--no-sandbox')
#options.add_argument("--window-size=1920,1080")

## Define the webdriver to use.
#driver = webdriver.Chrome(executable_path="/usr/bin/chromedriver", chrome_options=options)

# Firefox options
firefox_options = Options()
#firefox_options.add_argument("--headless")

# Firefox webdriver
driver = webdriver.Firefox(options=firefox_options)
driver.maximize_window()

logging.basicConfig(filename='example.log', level=logging.ERROR)


# Go to the website
def go_to_main_site(lab_environment):
    driver.get('https://nginx-ole-webapp-olechinaqa.apps.ole-apac152.prod.ole.redhat.com/rol-devel/app/login/local')


def go_to_course(lab_environment, course_id):
    WebDriverWait(driver, 30).until(EC.element_to_be_clickable(
        (By.XPATH, '//*[@id="avatar"]')))
    driver.get('https://nginx-ole-webapp-olechinaqa.apps.ole-apac152.prod.ole.redhat.com/rol-devel/app/courses/' + course_id)


def login():
    try:
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="login_button"]')))
        driver.find_element("xpath", '//*[@id="username"]').send_keys("rhls_test_basic_cn_003")
        driver.find_element("xpath", '//*[@id="password"]').send_keys("redhat123")
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="login_button"]'))).click()

    except:
        logging.error("An exception occurred while accepting during login")


def accept_cookies():
    try:
        WebDriverWait(driver, 30).until(
            EC.frame_to_be_available_and_switch_to_it((By.XPATH, '//iframe[@title="TrustArc Cookie Consent Manager"]')))
        time.sleep(1)
        WebDriverWait(driver, 30).until(EC.element_to_be_clickable(
            (By.XPATH, "//a[@class='call'][text()='Agree and proceed with standard settings']"))).click()
        driver.refresh()
    except:
        logging.error("An exception occurred while accepting cookies")

def start_lab(lab_environment, course_id):
    try:
        driver.refresh()
        WebDriverWait(driver, 30).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="course-tabs-tab-8"]/span[2]'))).click()

        driver.find_element("xpath", "//*[text()='Start']").click()

    except:
        print("An exception occurred during lab start in " + lab_environment + " environment and course " + course_id)
        create_lab(lab_environment, course_id)


def create_lab(lab_environment, course_id):
    time.sleep(10)
    try:
#        try:
#            available = False
#            WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
#            (By.XPATH, '//*[@id="app"]/article/div/div[1]')))
#            logging.error(course_id + " not deployed")
#        except:
#            available = True
#

#        if available:
            WebDriverWait(driver, 35).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="course-tabs-tab-8"]/span[2]'))).click()

            WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[text()="Create"]'))).click()
    except:
        logging.error(
            "An exception occurred during lab creation in " + lab_environment + " environment and course " + course_id)

def increase_lifespan(lab_environment, course_id):
    try:
        WebDriverWait(driver, 60).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="course-tabs-tab-8"]/span[2]'))).click()

        increase_lifespan = WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="tab-course-lab-environment"]/div/table/tr[2]/td[2]/button')))

        for i in range(30):
            increase_lifespan.click()
    except:
        logging.error("An exception occurred during lifespan extension in " + lab_environment + " environment and course " + course_id)

def increase_autostop(lab_environment, course_id):
    try:
        WebDriverWait(driver, 30).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="tab-course-lab-environment"]/div/table/tr[1]/td[2]/button')))

        increase_autostop = WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="tab-course-lab-environment"]/div/table/tr[1]/td[2]/button')))

        for i in range(30):
            increase_autostop.click()
    except:
        print(
            "An exception occurred during lifespan extension in " + lab_environment + " environment and course " + course_id)


## Main

go_to_main_site("{{ lab_environment }}")
accept_cookies()
login()
accept_cookies()
go_to_course("{{ lab_environment }}", "{{ item }}")
create_lab("{{ lab_environment }}", "{{ item }}")
start_lab("{{ lab_environment }}", "{{ item }}")
increase_autostop("{{ lab_environment }}", "{{ item }}")
increase_lifespan("{{ lab_environment }}", "{{ item }}")

#driver.quit()
