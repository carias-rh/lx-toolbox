#!/bin/bash

function get_course_from_list()
# Checks if there is an equivalent course in the list and returns the full name
{
	COURSE_LIST=$(cat {{ playbook_dir }}/../courses-list.txt)
	for course in $COURSE_LIST; do echo $course |grep "$1" >> /tmp/list.txt ; done

	if [[ $(echo $1 |grep ea) != ""  ]]
	then
	        COURSE_PATH=$(cat /tmp/list.txt | tail -n1)
	else
                COURSE_LIST=$(cat /tmp/list.txt |grep -v ea | grep -v "[*A-Z]")
		COURSE_VERSION=0
		for course in $COURSE_LIST
		do
			CHECK_COURSE_VERSION=$(echo $course |cut -d '-' -f2 | cut -d '.' -f1)
			if [[ `expr $CHECK_COURSE_VERSION` -gt `expr $COURSE_VERSION` ]]
			then
				COURSE_VERSION=$CHECK_COURSE_VERSION
			fi
		done
		COURSE_LIST=$(cat /tmp/list.txt |grep -v ea | grep "$COURSE_VERSION\..*")

		# compare subversion
                COURSE_SUBVERSION=0
                for course in $COURSE_LIST
                do
                        CHECK_COURSE_SUBVERSION=$(echo $course | cut -d '-' -f2 | cut -d '.' -f2)
                        if [[ `expr $CHECK_COURSE_SUBVERSION` -gt `expr $COURSE_SUBVERSION` ]]
                        then
                                COURSE_SUBVERSION=$CHECK_COURSE_SUBVERSION
                        fi
                done
                COURSE_PATH=$(cat /tmp/list.txt | grep -v ea | grep $COURSE_VERSION.$COURSE_SUBVERSION)
	fi

	rm /tmp/list.txt

}

function start_qa()
{
  if [ "$ENV" == "rol" ] || [ "$ENV" == "rol-stage" ]  || [ "$ENV" == "china" ]
		 then /usr/bin/ansible-playbook {{ playbook_dir }}/operate-lab.yml -e action="qa" -e "lab_environment=$ENV" -e "{'course_id': ['$COURSE_PATH']}" -e chapter_and_section="$SECTION" -e selenium_driver="$DRIVER" -e debug=$DEBUG

	else
	    ENV=rol
      /usr/bin/ansible-playbook {{ playbook_dir }}/operate-lab.yml -e action="qa" -e "lab_environment=$ENV" -e "{'course_id': ['$COURSE_PATH']}" -e chapter_and_section="$SECTION" -e selenium_driver="$DRIVER" -e debug=$DEBUG
	fi

}


VALID_ARGS=$(getopt -o :d:e:c:s:h:D --long driver:,env:,course:,section:,debug:,help: -- "$@")
if [[ $? -ne 0 ]]; then
    exit 1;
fi

eval set -- "$VALID_ARGS"
while [ : ]; do
  case "$1" in
    -e | --env)
        ENV=$2
        shift 2
        ;;
    -c | --course)
        COURSE=$2
        shift 2
        ;;

    -s | --section)
        SECTION=$2
        shift 2
        ;;
    -d | --driver)
        DRIVER=$2
        shift 2
        ;;
    -D | --debug)
        DEBUG='True'
        shift
        ;;
    --) shift;
        break
        ;;
    -h)
        echo "Usage: $(basename $0) [-e | --env arg] [-c | --course arg] [-s | --section arg]"
        echo ""
        echo "Pass only the course number to select the latest version in ROL production and the first guided exercise"
        echo "$ qa -c 199"
        echo "or by selecting a particular section and any other environment:"
        echo "$ qa -course 199 -section ch09s04 -env rol-stage"
        exit 1
        ;;


  esac
done




get_course_from_list $COURSE

echo ""
if [[ $COURSE_PATH != "" ]]
then
    echo "Course: $COURSE_PATH"
else
    echo "Course $COURSE does not exist"
    exit
fi

if [[ $SECTION != "" ]]
then
    echo "Section: $SECTION"
else
    echo "Section: ch01s02"
    SECTION='ch01s02'
fi

if [[ $ENV != '' ]]
then
    echo "Environment: $ENV"
else
    echo "Environment: rol-production"
    ENV='rol'
fi

if [[ $DRIVER != '' ]]
then
    echo "Selenium driver: $DRIVER"
else
    echo "Selenium driver: chromedriver"
    DRIVER='chrome'
fi

if [[ $DEBUG != '' ]]
then
    echo "Debug: $DEBUG"
else
    DEBUG=False
    echo "Debug: False"
fi

echo ""
start_qa $@
echo "---> Starting selenium script <---"
/usr/bin/python /tmp/qa-$COURSE_PATH-$ENV.py