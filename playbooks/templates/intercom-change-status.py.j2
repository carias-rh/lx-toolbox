#!/usr/local/bin/python3
### Maintained by carias@redhat.com
import re
import time, sys, os.path
import pickle
from selenium import webdriver
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By

options = webdriver.ChromeOptions()
options.add_argument('--ignore-certificate-errors')
options.add_argument("--window-size=1600,1200")
options.add_argument("--user-data-dir={{ ansible_env.HOME}}/.config/google-chrome/rh-sso")

# Define the webdriver to use.
# Chrome webdriver
driver = webdriver.Chrome(options=options)


# Go to the website
def go_to_main_site():
    driver.get("https://app.intercom.com/a/inbox/jeuow7ss/inbox/admin/4643910")
    time.sleep(2)

def intercom_login():
    try:
        WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div[1]/div[2]/div/div/div/div/div[3]/a/div[2]'))).click()
        try:
            WebDriverWait(driver, 3).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="identifierId"]'))).send_keys("{{ username }}" + "@redhat.com")
            WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
                (By.XPATH, '/html/body/div[1]/div[1]/div[2]/div/div[2]/div/div/div[2]/div/div[2]/div/div[1]/div/div/button/span'))).click()
        except:
            WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
                (By.XPATH, '//*[@id="view_container"]/div/div/div[2]/div/div[1]/div/form/span/section/div/div/div/div/ul/li[1]/div/div[1]/div/div[2]/div[2]'))).click()

        # RH SSO
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
                (By.XPATH, '//*[@id="username"]'))).send_keys("{{ username }}")
        counter = os.popen("cat {{ playbook_dir }}/../counter").read()
        token = os.popen("oathtool --hotp {{ secret }} -c " + str(counter)).read().replace('\n', '')
        WebDriverWait(driver, 5).until(EC.element_to_be_clickable(
                (By.XPATH, '//*[@id="password"]'))).send_keys(str("{{ pin }}").replace('\n', '') + str(token).replace('\n', ''))
        WebDriverWait(driver, 5).until(EC.element_to_be_clickable(
                (By.XPATH, '//*[@id="submit"]'))).click()

        # Increment SSO token counter
        counter = int(counter) + 1
        os.popen("echo " + str(counter) + " > {{ playbook_dir }}/../counter")

    except:
        print("An exception occurred while accepting during login")


def intercom_change_status(change_status_to):
        WebDriverWait(driver, 30).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div[1]/div/div[1]/div[3]/div/div/div/div[1]/div[5]/div[2]/div/div'))).click()
        # Get attributes from the gravatar
        status_raw = driver.find_element("xpath",'/html/body/div[1]/div/div[1]/div[3]/div/div/div/div[1]/div[5]/div[2]/div/div').get_attribute("class")
        status_away = re.findall("o__away", status_raw)
        status_active = re.findall("o__active", status_raw)

        # Change status to Away if actual status is active
        if change_status_to == "Away" and status_active:
            WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div[1]/div[2]/div/div/div/div/div/div[1]/div[2]/div/div/button/span'))).click()

        # Change status to Active if actual status is Away
        if change_status_to == "Active" and status_away:
            WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div[1]/div[2]/div/div/div/div/div/div[1]/div[2]/div/div/button/span'))).click()



# Main

go_to_main_site()
intercom_login()
intercom_change_status("{{ status }}")
driver.quit()
