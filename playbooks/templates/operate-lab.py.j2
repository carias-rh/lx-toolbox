#!/usr/local/bin/python3
### Maintained by carias@redhat.com

import time, os.path
from selenium import webdriver
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By

{% if selenium_driver == "chrome" %}
options = webdriver.ChromeOptions()
options.add_argument('--ignore-certificate-errors')
options.add_argument("--window-size=1600,1200")
options.add_argument("--user-data-dir={{ ansible_env.HOME}}/.config/google-chrome/intercom-profile")

# Define the webdriver to use.
# Chrome webdriver
driver = webdriver.Chrome(options=options)
{% endif -%}

{% if selenium_driver == "firefox" %}
driver = webdriver.Firefox()
driver.install_addon(os.path.expanduser('{{ playbook_dir }}/../copy_on_select-1.0-an+fx.xpi'), temporary=True)
driver.maximize_window()
{% endif -%}

# Go to the course site
def go_to_course(course_id):
{% if lab_environment == "rol" %}
    driver.get('https://rol.redhat.com/rol/app/courses/' + course_id)
{% elif lab_environment == "rol-stage" %}
    driver.get('https://rol-factory.ole.redhat.com/rol-devel/app/courses/' + course_id)
{% endif %}


def login():
    try:
{% if lab_environment == "rol" %}

        driver.find_element("xpath", "/html/body/div[1]/main/div/div/div[1]/div[2]/div[2]/div/section[1]/form/div[1]/input").send_keys("{{ rh_username }}@redhat.com")
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="login-show-step2"]'))).click()

        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="rh-sso-flow"]'))).click()

        # RH SSO
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="submit"]')))
        driver.find_element("xpath", '//*[@id="username"]').send_keys("{{ username }}")
        counter = os.popen("cat {{ playbook_dir }}/../counter").read()
        token = os.popen("oathtool --hotp {{ secret }} -c " + str(counter)).read().replace('\n', '')
        driver.find_element("xpath", '//*[@id="password"]').send_keys(
            str("{{ pin }}").replace('\n', '') + str(token).replace('\n', ''))
        driver.find_element("xpath", '//*[@id="submit"]').click()

        # Increment SSO token counter if everything went well
        counter = int(counter) + 1
        os.popen("echo " + str(counter) + " > {{ playbook_dir }}/../counter")

{% elif lab_environment == "rol-stage" %}

        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div/div[2]/div/div/div[2]/ul/a/span'))).click()

        driver.find_element("xpath", '//*[@id="login_field"]').send_keys("{{ github_username }}")
        driver.find_element("xpath", '//*[@id="password"]').send_keys("{{ github_password }}")
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div[1]/div[3]/main/div/div[3]/form/div/input[11]'))).click()
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="app_totp"]'))).click()
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="app_totp"]'))).send_keys(os.popen("2fa github").read())
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '/html/body/div[1]/div[3]/main/div/div[3]/div[2]/form/button'))).click()


{% endif %}

    except:
        print("An exception occurred while accepting during login")

def accept_cookies():
    try:
        WebDriverWait(driver, 10).until(
            EC.frame_to_be_available_and_switch_to_it((By.XPATH, '//iframe[@title="TrustArc Cookie Consent Manager"]')))
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, "//a[@class='call'][text()='Agree and proceed with standard settings']"))).click()
        driver.refresh()
    except:
        print("An exception occurred while accepting cookies")


def create_lab(course_id):
    try:
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="course-tabs-tab-8"]/span[2]'))).click()
        WebDriverWait(driver, 1).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[text()="Create"]'))).click()
    except:
        print(
            "An exception occurred during lab creation in course " + course_id)


def start_lab(course_id):
    try:
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="course-tabs-tab-8"]/span[2]'))).click()
        # Click on Start lab
        try:
            # Not sure why it fails on rol-stage
            WebDriverWait(driver, 2).until(EC.element_to_be_clickable(
                (By.XPATH, "//*[text()='Start']"))).click()
        except:
            WebDriverWait(driver, 1).until(EC.element_to_be_clickable(
                (By.XPATH, "/html/body/div[1]/section/div/div[2]/div/section/div[2]/div/div[3]/div/div/div[3]/button[2]"))).click()

    except:
        print("An exception occurred during lab start in course " + course_id)
        create_lab(course_id)


def delete_lab(course_id):
    try:
        driver.refresh()
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="course-tabs-tab-8"]/span[2]'))).click()
        try:
            # Not sure why it fails on rol-stage
            WebDriverWait(driver, 2).until(EC.element_to_be_clickable(
                (By.XPATH, '//*[text()="Delete"]'))).click()
        except:
            WebDriverWait(driver, 1).until(EC.element_to_be_clickable(
                (By.XPATH, "/html/body/div[1]/section/div/div[2]/div/section/div[2]/div/div[3]/div/div/div[2]/button"))).click()

        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div[3]/div[2]/div/div/div[2]/button[1]'))).click()
        time.sleep(20)


    except:
        print("An exception occurred during lab deletion in course " + course_id)

def increase_autostop(course_id):
    try:
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="tab-course-lab-environment"]/div/table/tr[1]/td[2]/button')))
        time.sleep(20)

        increase_autostop = WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="tab-course-lab-environment"]/div/table/tr[1]/td[2]/button')))

        for i in range(30):
            increase_autostop.click()
    except:
        print(
            "An exception occurred during lifespan extension in course " + course_id)


def increase_lifespan(course_id):
    try:
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="course-tabs-tab-8"]/span[2]'))).click()
        time.sleep(2)

        increase_lifespan = WebDriverWait(driver, 3).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[@id="tab-course-lab-environment"]/div/table/tr[2]/td[2]/button')))

        for i in range(30):
            increase_lifespan.click()
    except:
        print("An exception occurred during lifespan extension in course " + course_id)


def impersonate():
    try:
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '//*[text()="Switch user"]'))).click()

        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div[3]/div[2]/div/div/div[2]/form/button')))
        time.sleep(1)
        driver.find_element("xpath", '//*[@id="formInlineUsername"]').send_keys("{{ impersonate_username }}")

        driver.find_element("xpath", "/html/body/div[3]/div[2]/div/div/div[2]/form/button").click()
        time.sleep(5)

    except:
        print("An exception occurred while impersonating {{ impersonate_username }}")


## Main

go_to_course("rh124-9.0")
accept_cookies()
login()

{% for course in course_id -%}

accept_cookies()

{% if action == "start" %}
go_to_course("{{ course }}")
start_lab("{{ course }}")
increase_autostop("{{ course }}")
increase_lifespan("{{ course }}")
{% endif %}

{% if action == "create" %}
go_to_course("{{ course }}")
create_lab("{{ course }}")
increase_lifespan("{{ course }}")
{% endif %}

{% if action == "delete" %}
go_to_course("{{ course }}")
delete_lab("{{ course }}")
{% endif %}

{% if action == "recreate" %}
go_to_course("{{ course }}")
delete_lab("{{ course }}")
create_lab("{{ course }}")
increase_autostop("{{ course }}")
increase_lifespan("{{ course }}")
{% endif %}

{% if action == "impersonate" %}
impersonate()
go_to_course("{{ course }}")
WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="course-tabs-tab-8"]/span[2]'))).click()
{% endif %}

{% endfor %}

driver.quit()
