#!/usr/local/bin/python3
### Maintained by carias@redhat.com
import time, os.path
import re

from selenium import webdriver
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support.select import Select
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys

options = webdriver.ChromeOptions()
options.add_argument('--ignore-certificate-errors')
options.add_argument("--window-size=1600,1200")
options.add_argument("--user-data-dir={{ ansible_env.HOME}}/.config/google-chrome/rh-sso")

# Define the webdriver to use.
# Chrome webdriver
driver = webdriver.Chrome(options=options)

def snow_login(snow_id):
    try:
        driver.get('https://redhat.service-now.com/surl.do?n=' + snow_id + '')

        # RH SSO
        driver.find_element("xpath", '//*[@id="username"]').send_keys("{{ username }}")
        counter = os.popen("cat {{ playbook_dir }}/../counter").read()
        token = os.popen("oathtool --hotp {{ secret }} -c " + str(counter)).read().replace('\n', '')
        driver.find_element("xpath", '//*[@id="password"]').send_keys(str("{{ pin }}").replace('\n', '') + str(token).replace('\n', ''))
        driver.find_element("xpath", '//*[@id="submit"]').click()

        # Increment SSO token counter
        counter = int(counter) + 1
        os.popen("echo " + str(counter) + " > {{ playbook_dir }}/../counter")
        WebDriverWait(driver, 3).until(EC.element_to_be_clickable((By.XPATH,'//*[@id="finishLoginLink"]'))).click()
    except:
        print("An exception occurred while accepting during snow login")

def jira_login():
    try:
        driver.get("https://training-feedback.redhat.com")
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable(
            (By.XPATH, '/html/body/div/div/section/div/div/section/div/p[3]/a'))).click()
        WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="username-verification"]'))).send_keys("{{ username }}" + "@redhat.com")
        time.sleep(3)
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="login-show-step2"]'))).click()
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="rh-sso-flow"]'))).click()
    except:
        print("An exception occurred while accepting during jira login")

def wait_jira_loaded():
    try:
        WebDriverWait(driver, 3).until(EC.element_to_be_clickable((By.XPATH,'//*[@class="aui-button aui-button-primary aui-style create-issue "]')))
    except:
        WebDriverWait(driver, 3).until(EC.element_to_be_clickable((By.XPATH, '//*[@class="aui-nav-link login-link"]')))


def get_snow_info(snow_id):


    WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it((By.XPATH, '//*[@id="gsft_main"]')))

    # Get description
    description = driver.find_element("xpath", '//*[@id="sys_original.x_redha_red_hat_tr_x_red_hat_training.description"]').get_attribute('value')

    print(description)
    # Get issue info
    issue = re.findall("Description:.*", description)[0].split(":  ")[1]
    course = re.findall("Course:.*", description)[0].split(":  ")[1].upper().replace(" ", "")
    version = re.findall("Version:.*", description)[0].split(":  ")[1]
    url = re.findall("URL:.*", description)[0].split(":  ")[1]
    chapter = re.findall("ch[0-9][0-9]", url)[0].split("ch")[1]
    try:
        section = re.findall("s[0-9][0-9]", url)[0].split("s")[1]
    except:
        section = ""
    title = re.findall("Section Title:.*", description)[0].split(":  ")[1]
    rhnid = "{{ username }}@redhat.com"

    snow_info = {
        "SNOW_id": snow_id,
        "Description": issue,
        "Course": course,
        "Version": version,
        "URL": url,
        "Chapter": chapter,
        "Section": section,
        "Title": title,
        "RHNID": rhnid,
    }
    print(snow_info)
    return snow_info

def select_dropdown(element, input):
    element.send_keys(Keys.CONTROL + "a")
    element.send_keys(Keys.DELETE)
    element.send_keys(input)
    element.send_keys(Keys.ENTER)

def create_jira(snow_info):

    driver.get('https://training-feedback.redhat.com/projects/' + snow_info["Course"] + '')
    # Click Create
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="create_link"]'))).click()
    # Select Bug
    issuetype_field = WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="issuetype-field"]')))
    select_dropdown(issuetype_field, "Bug")
    # Add SNOW ID to summary
    WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="summary"]'))).send_keys(snow_info["SNOW_id"] + " - ")
    # Select Minor priority
    priority_field = WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="priority-field"]')))
    select_dropdown(priority_field, "Minor")

    # Select Lab component
    components_field = WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="components-textarea"]')))
    select_dropdown(components_field, "Labs")
    select_dropdown(components_field, "SG")

    # Add chapter and section
    WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="customfield_10101"]'))).send_keys(snow_info["Chapter"])
    WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="customfield_10204"]'))).send_keys(snow_info["Section"])
    WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="customfield_10206"]'))).send_keys(snow_info["Title"])
    # Add RHNID
    WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="customfield_10207"]'))).send_keys(snow_info["RHNID"])
    # Add URL
    WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH, '//*[@id="customfield_10205"]'))).send_keys(snow_info["URL"])

    # Add description
    WebDriverWait(driver, 2).until(EC.frame_to_be_available_and_switch_to_it((By.XPATH, '/html/body/section[3]/div/div[1]/div/form/div/div[2]/div[7]/div[1]/div[1]/div[9]/div[1]/div/div/div[1]/iframe')))
    WebDriverWait(driver, 2).until(EC.element_to_be_clickable((By.XPATH,  '//*[@id="tinymce"]'))).send_keys(snow_info["Description"])

# Main
snow_login("{{ snow_id }}")
snow_info = get_snow_info("{{ snow_id }}")
jira_login()
create_jira(snow_info)
