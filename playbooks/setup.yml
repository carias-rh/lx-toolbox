- name: ROL labs installer
  hosts: localhost
  become: true

  tasks:
    - name: Ensure dependencies are installed.
      package:
        name:
          - oathtool
          - epel-release
          - python3-pip
          - chromium.x86_64
          - jq
        state: present

    - name: Install Selenium with pip
      ansible.builtin.pip:
        name: selenium
        executable: pip3

    - name: Download selenium drivers
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: "/tmp/{{ item | split('/')| last }}"
      loop:
        - "https://chromedriver.storage.googleapis.com/111.0.5563.64/chromedriver_linux64.zip"

    - name: Extract selenium drivers into /usr/bin/
      ansible.builtin.unarchive:
        src: "/tmp/{{ item }}"
        dest: "/usr/bin/"
      loop:
        - chromedriver_linux64.zip

    - name: remove /tmp files
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      loop:
        - chromedriver_linux64.zip

    - name: Install xq
      shell: 'curl -sSL https://bit.ly/install-xq | bash'
      ignore_errors: true

    - name: Install wrapper scripts into /usr/bin/
      ansible.builtin.template:
        src: "./templates/wrapper-scripts/{{ item }}"
        dest: "/usr/bin/{{ item | splitext | first }}"
        mode: 0755
      loop:
        - start.j2
        - delete.j2
        - recreate.j2
        - impersonate.j2
        - qa.j2
        - jira.j2
        - snow.j2
      tags: scripts

    - name: generate secret and
      shell: 'dd if=/dev/random bs=1M count=1 status=none | sha1sum | cut -b 1-40'
      register: generated_secret
      tags: secret


    - name: place secret in playbooks/vars/credentials.yml file
      ansible.builtin.lineinfile:
        path: '{{ playbook_dir }}/vars/credentials.yml'
        regexp: '^secret'
        line: 'secret: {{ generated_secret.stdout }}'
      tags: secret

    - name: Use this secret string to create your token.redhat.com
      debug:
        var: generated_secret.stdout
      tags: secret
